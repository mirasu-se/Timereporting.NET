// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Timereporting.Infrastructure.Data;

#nullable disable

namespace Timereporting.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Timereporting.Infrastructure.Data.Entities.Application.AppUserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Timereporting.Infrastructure.Data.Entities.Timereport.ReportTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastTimeUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("TimeDeleted")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserCreated")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserDeleted")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserUpdated")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("ReportTypes");
                });

            modelBuilder.Entity("Timereporting.Infrastructure.Data.Entities.Timereport.TimereportEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("ImageFileContentType")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("varchar(48)");

                    b.Property<byte[]>("ImageFileData")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("ImageFileName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ImageFilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("IsClosed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("IsOpened")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastTimeUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("SubFilterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("TimeDeleted")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("TimeEnded")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("TimeFinalized")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("TimeOpened")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("TimeReportUUID")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("TimeStarted")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalHours")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<Guid>("UserCreated")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserDeleted")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserFinalized")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserUUID")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserUpdated")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("WorkplaceUUID")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Timereports");
                });

            modelBuilder.Entity("Timereporting.Infrastructure.Data.Entities.Workplace.WorkplaceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("ImageFileContentType")
                        .HasMaxLength(48)
                        .HasColumnType("varchar(48)");

                    b.Property<byte[]>("ImageFileData")
                        .HasColumnType("longblob");

                    b.Property<string>("ImageFileName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ImageFilePath")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastTimeUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("TimeDeleted")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserCreated")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserDeleted")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("UserUpdated")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("WorkplaceUUID")
                        .HasColumnType("char(36)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Workplaces");
                });
#pragma warning restore 612, 618
        }
    }
}
