{"version":3,"file":"js/previewTimeReportModule/previewTimeReportModule.js","mappings":";;;;;AAAA;AACA,MAAMA,MAAM,GAAG,sCAAsC;;AAErD;AACA,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,MAAMC,OAAO,GAAG,EAAE;EAClB,MAAMC,UAAU,GAAG,CAAC,aAAa,EAAE,aAAa,EAAE,aAAa,CAAC;;EAEhE;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC3B,MAAMC,IAAI,GAAGC,aAAa,CAAC,CAAC;IAC5B,MAAMC,SAAS,GAAGJ,UAAU,CAACK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGP,UAAU,CAACQ,MAAM,CAAC,CAAC;IAC3E,MAAMC,KAAK,GAAGC,cAAc,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;IAE9CZ,OAAO,CAACa,IAAI,CAAC;MAAEV,IAAI;MAAEE,SAAS;MAAEK;IAAM,CAAC,CAAC;EAC1C;EAEA,OAAOV,OAAO;AAChB;;AAEA;AACA,SAASI,aAAaA,CAAA,EAAG;EACvB,MAAMU,KAAK,GAAG,IAAIC,IAAI,CAAC,YAAY,CAAC;EACpC,MAAMC,GAAG,GAAG,IAAID,IAAI,CAAC,CAAC;EAEtB,OAAO,IAAIA,IAAI,CACbD,KAAK,CAACG,OAAO,CAAC,CAAC,GAAGX,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIQ,GAAG,CAACC,OAAO,CAAC,CAAC,GAAGH,KAAK,CAACG,OAAO,CAAC,CAAC,CACpE,CAAC,CAACC,kBAAkB,CAAC,CAAC;AACxB;;AAEA;AACA,SAASP,cAAcA,CAACQ,GAAG,EAAEC,GAAG,EAAE;EAChC,OAAOd,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIY,GAAG,GAAGD,GAAG,CAAC,GAAGA,GAAG;AAC1C;;AAEA;AACA,SAASE,gBAAgBA,CAAA,EAAG;EAC1B;EACAC,KAAK,CAACxB,MAAM,CAAC,CACVyB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;IACd;IACA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,0BAA0B,CAAC;IACpEF,SAAS,CAACG,SAAS,GAAG,EAAE;;IAExB;IACAJ,IAAI,CAACK,OAAO,CAAEC,MAAM,IAAK;MACvB,MAAMC,GAAG,GAAI;AACrB,gBAAgBD,MAAM,CAAC7B,IAAK;AAC5B,gBAAgB6B,MAAM,CAAC3B,SAAU;AACjC,gBAAgB2B,MAAM,CAACtB,KAAM;AAC7B;AACA;AACA;AACA;AACA;AACA,cAAc;MACNiB,SAAS,CAACO,kBAAkB,CAAC,WAAW,EAAED,GAAG,CAAC;IAChD,CAAC,CAAC;EACJ,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;IAChBC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;EACtD,CAAC,CAAC;AACN;;AAEA;AACA,MAAME,gBAAgB,GAAGV,QAAQ,CAACW,cAAc,CAAC,kBAAkB,CAAC;AACpED,gBAAgB,CAACE,gBAAgB,CAAC,OAAO,EAAGC,KAAK,IAAK;EACpDA,KAAK,CAACC,cAAc,CAAC,CAAC;EACtBL,OAAO,CAACM,GAAG,CAAC,gBAAgB,CAAC;EAC7B;EACA,MAAMC,QAAQ,GAAG7C,kBAAkB,CAAC,CAAC;EACrCsB,gBAAgB,CAACuB,QAAQ,CAAC;AAC5B,CAAC,CAAC;AAEFC,MAAM,CAACxB,gBAAgB,GAAGA,gBAAgB,C","sources":["webpack://webpack-mvc/./src/js/presentation/views/timereport/previewTimeReportModule.js"],"sourcesContent":["// Fake API endpoint URL\r\nconst apiUrl = \"https://api.example.com/time-reports\";\r\n\r\n// Function to generate random time report data\r\nfunction generateRandomData() {\r\n  const reports = [];\r\n  const workspaces = [\"Workplace 1\", \"Workplace 2\", \"Workplace 3\"];\r\n\r\n  // Generate three random time reports\r\n  for (let i = 1; i <= 3; i++) {\r\n    const date = getRandomDate();\r\n    const workplace = workspaces[Math.floor(Math.random() * workspaces.length)];\r\n    const hours = getRandomFloat(4, 10).toFixed(2);\r\n\r\n    reports.push({ date, workplace, hours });\r\n  }\r\n\r\n  return reports;\r\n}\r\n\r\n// Function to get a random date within a range\r\nfunction getRandomDate() {\r\n  const start = new Date(\"2022-01-01\");\r\n  const end = new Date();\r\n\r\n  return new Date(\r\n    start.getTime() + Math.random() * (end.getTime() - start.getTime())\r\n  ).toLocaleDateString();\r\n}\r\n\r\n// Function to get a random float number within a range\r\nfunction getRandomFloat(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\n\r\n// Function to fetch data from the fake API\r\nfunction fetchTimeReports() {\r\n  // Make an API request to fetch data\r\n  fetch(apiUrl)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      // Clean the time-report-table by removing all existing rows\r\n      const tableBody = document.querySelector(\"#time-report-table tbody\");\r\n      tableBody.innerHTML = \"\";\r\n\r\n      // Generate new table rows based on the fetched data\r\n      data.forEach((report) => {\r\n        const row = `<tr>\r\n          <td>${report.date}</td>\r\n          <td>${report.workplace}</td>\r\n          <td>${report.hours}</td>\r\n          <td>\r\n            <button type=\"button\" class=\"btn btn-light\" data-bs-toggle=\"modal\" data-bs-target=\"#createReportModal\">\r\n              <i class=\"btn btn-secondary bi bi-info-circle m-0\"></i>\r\n            </button>\r\n          </td>\r\n        </tr>`;\r\n        tableBody.insertAdjacentHTML(\"beforeend\", row);\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error fetching time reports:\", error);\r\n    });\r\n}\r\n\r\n// Event listener for the getReportsButton click event\r\nconst getReportsButton = document.getElementById(\"getReportsButton\");\r\ngetReportsButton.addEventListener(\"click\", (event) => {\r\n  event.preventDefault();\r\n  console.log(\"button clicked\");\r\n  // Simulate fetching data from the API and updating the table\r\n  const fakeData = generateRandomData();\r\n  fetchTimeReports(fakeData);\r\n});\r\n\r\nwindow.fetchTimeReports = fetchTimeReports;\r\n"],"names":["apiUrl","generateRandomData","reports","workspaces","i","date","getRandomDate","workplace","Math","floor","random","length","hours","getRandomFloat","toFixed","push","start","Date","end","getTime","toLocaleDateString","min","max","fetchTimeReports","fetch","then","response","json","data","tableBody","document","querySelector","innerHTML","forEach","report","row","insertAdjacentHTML","catch","error","console","getReportsButton","getElementById","addEventListener","event","preventDefault","log","fakeData","window"],"sourceRoot":""}